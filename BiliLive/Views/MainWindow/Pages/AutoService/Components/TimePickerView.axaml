<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:components="clr-namespace:BiliLive.Views.MainWindow.Pages.AutoService.Components"
             xmlns:utility="clr-namespace:BiliLive.Views.MainWindow.Pages.AutoService.Components.Utility"
             mc:Ignorable="d" d:DesignWidth="360" d:DesignHeight="520"
             x:DataType="components:TimePickerViewModel"
             x:Class="BiliLive.Views.MainWindow.Pages.AutoService.Components.TimePickerView"
             ClipToBounds="True">
    
    <UserControl.Resources>
        <utility:NegatingDoubleHalfConverter x:Key="NegatingDoubleHalfConverter"/>
        <utility:BoolToBrushConverter x:Key="BoolToBrushConverter"/>
        <utility:NegateDoubleConverter x:Key="NegateDoubleConverter"/>
        
        <Color x:Key="PrimaryColor">#6750A4</Color>
        <Color x:Key="OnPrimaryColor">#FFFFFF</Color>
        <Color x:Key="SurfaceContainerHighestColor">#E6E0E9</Color>
        <Color x:Key="OnSurfaceColor">#1C1B1F</Color>
        <Color x:Key="OnSurfaceVariantColor">#49454F</Color>
        <Color x:Key="OutlineColor">#79747E</Color>

        <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
        <SolidColorBrush x:Key="OnPrimaryBrush" Color="{StaticResource OnPrimaryColor}"/>
        <SolidColorBrush x:Key="SurfaceContainerHighestBrush" Color="{StaticResource SurfaceContainerHighestColor}"/>
        <SolidColorBrush x:Key="OnSurfaceBrush" Color="{StaticResource OnSurfaceColor}"/>
        <SolidColorBrush x:Key="OnSurfaceVariantBrush" Color="{StaticResource OnSurfaceVariantColor}"/>
        <SolidColorBrush x:Key="OutlineBrush" Color="{StaticResource OutlineColor}"/>
    </UserControl.Resources>

    <UserControl.Styles>
        <Style Selector="Button.ClockTick">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource OnSurfaceBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="CornerRadius" Value="20"/>
        </Style>

        <Style Selector="Button.ClockTick.Selected">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource OnPrimaryBrush}"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <Style Selector="Button.ClockTick:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="#406750A4"/>
        </Style>

        <Style Selector="Button.ClockTick:pressed /template/ ContentPresenter">
            <Setter Property="Background" Value="#606750A4"/>
        </Style>
        
        <Style Selector="Button.AmPmToggle">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="{StaticResource OnSurfaceVariantBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style Selector="Button.AmPmToggle:pointerover">
            <Setter Property="Background" Value="#20000000"/>
        </Style>
        <Style Selector="Button.AmPmToggle:pressed">
            <Setter Property="Background" Value="#30000000"/>
        </Style>
        <Style Selector="Button.AmPmToggle.Active">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource OnPrimaryBrush}"/>
        </Style>
        
        <Style Selector="Button.TimeButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource OnSurfaceBrush}"/>
            <Setter Property="FontSize" Value="52"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Transitions">
                <Transitions>
                    <BrushTransition Property="Background" Duration="0:0:0.25"/>
                </Transitions>
            </Setter>
        </Style>

        <Style Selector="Button.TimeButton:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="#206750A4"/>
        </Style>

        <Style Selector="Button.TimeButton:pressed /template/ ContentPresenter">
            <Setter Property="Background" Value="#406750A4"/>
        </Style>
    </UserControl.Styles>
    
    <Border CornerRadius="55"
            Background="{StaticResource SurfaceContainerHighestBrush}"
            ClipToBounds="True">
        <Grid>
            <Ellipse Width="300" Height="300" HorizontalAlignment="Center" VerticalAlignment="Center"
                     Fill="#40D8B4FF" RenderTransformOrigin="0.5,0.5" IsHitTestVisible="False">
                <Ellipse.RenderTransform>
                    <ScaleTransform ScaleX="1.2" ScaleY="1.2"/>
                </Ellipse.RenderTransform>
                <Ellipse.Effect>
                    <BlurEffect Radius="40"/>
                </Ellipse.Effect>
            </Ellipse>
            
            <Grid RowDefinitions="Auto, Auto, *, Auto" Margin="12">
                <TextBlock Grid.Row="0" Text="Select time" FontSize="16" FontWeight="Medium"
                           Foreground="{StaticResource OnSurfaceVariantBrush}" Margin="12"/>

                <!-- 小时/分钟 + AM/PM -->
                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Spacing="10" Margin="12,0">
                    <StackPanel Orientation="Horizontal">
                        <!-- 小时 -->
                        <Button Width="96" Height="80"
                                Background="{Binding IsHourMode, Converter={StaticResource BoolToBrushConverter}, ConverterParameter='#6750A4,#E6E0E9'}"
                                BorderThickness="0"
                                Command="{Binding SetModeCommand}" CommandParameter="Hour"
                                Content="{Binding DisplayHour24, StringFormat='00'}" FontSize="52"
                                Foreground="{Binding IsHourMode, Converter={StaticResource BoolToBrushConverter}, ConverterParameter='#FFFFFF,#1C1B1F'}"
                                Classes="TimeButton"/>
                        <Panel Width="28"/>
                        <!-- 分钟 -->
                        <Button Width="96" Height="80"
                                Background="{Binding IsMinuteMode, Converter={StaticResource BoolToBrushConverter}, ConverterParameter='#6750A4,#E6E0E9'}"
                                BorderThickness="0"
                                Command="{Binding SetModeCommand}" CommandParameter="Minute"
                                Content="{Binding Minute, StringFormat='00'}" FontSize="52"
                                Foreground="{Binding IsMinuteMode, Converter={StaticResource BoolToBrushConverter}, ConverterParameter='#FFFFFF,#1C1B1F'}"
                                Classes="TimeButton"/>
                    </StackPanel>

                    <!-- AM/PM -->
                    <Border BorderBrush="{StaticResource OutlineBrush}" BorderThickness="1" CornerRadius="8" Height="80">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="1" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!-- AM -->
                            <Button Grid.Row="0" Content="AM" Classes="AmPmToggle"
                                    Command="{Binding SetAmPmCommand}" CommandParameter="AM"
                                    Classes.Active="{Binding IsAm}"
                                    CornerRadius="7,7,0,0"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            
                            <Rectangle Grid.Row="1" Fill="{StaticResource OutlineBrush}" Height="1"/>

                            <!-- PM -->
                            <Button Grid.Row="2" Content="PM" Classes="AmPmToggle"
                                    Command="{Binding SetAmPmCommand}" CommandParameter="PM"
                                    Classes.Active="{Binding !IsAm}"
                                    CornerRadius="0,0,7,7"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </Grid>
                    </Border>
                </StackPanel>

                <!-- 时钟面盘 -->
                <Grid Grid.Row="2" Width="260" Height="260" Margin="0,20">
                    <Grid x:Name="ClockFaceGrid">
                        <Interaction.Behaviors>
                            <EventTriggerBehavior EventName="PointerPressed">
                                <InvokeCommandAction Command="{Binding PointerPressedCommand}" PassEventArgsToCommand="True" />
                            </EventTriggerBehavior>
                            <EventTriggerBehavior EventName="PointerMoved">
                                <InvokeCommandAction Command="{Binding PointerMovedCommand}" PassEventArgsToCommand="True" />
                            </EventTriggerBehavior>
                            <EventTriggerBehavior EventName="PointerReleased">
                                <InvokeCommandAction Command="{Binding PointerReleasedCommand}" PassEventArgsToCommand="True" />
                            </EventTriggerBehavior>
                        </Interaction.Behaviors>
                        
                        <Ellipse Width="260" Height="260" Fill="{StaticResource SurfaceContainerHighestBrush}" />
                        
                        <Canvas Width="260" Height="260">
                            <Grid Width="2" Height="{Binding HandLength}"
                                  Canvas.Left="130" Canvas.Top="130"
                                  RenderTransformOrigin="0.5,0">
                                <Grid.RenderTransform>
                                    <RotateTransform Angle="{Binding HandAngle}" />
                                </Grid.RenderTransform>

                                <Rectangle Width="2" Height="{Binding HandLength}" Fill="{StaticResource PrimaryBrush}"
                                           VerticalAlignment="Top" HorizontalAlignment="Center" />
                                <Ellipse Width="38" Height="38" Fill="{StaticResource PrimaryBrush}"
                                         VerticalAlignment="Top" HorizontalAlignment="Center">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform Y="83"/>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Grid>

                            <Ellipse Width="8" Height="8" Fill="{StaticResource PrimaryBrush}" Canvas.Left="126" Canvas.Top="126" />
                        </Canvas>

                        <!-- 小时刻度 -->
                        <ItemsControl ItemsSource="{Binding HourTicks}" IsVisible="{Binding IsHourMode}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <utility:CircularPanel RadiusFactor="0.8" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate x:DataType="utility:ClockTickViewModel">
                                    <Button Content="{Binding Display}" Classes="ClockTick" Classes.Selected="{Binding IsSelected}"
                                            Command="{Binding $parent[UserControl].((components:TimePickerViewModel)DataContext).SelectTimeCommand}"
                                            CommandParameter="{Binding}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <!-- 分钟 刻度 -->
                        <ItemsControl ItemsSource="{Binding MinuteTicks}" IsVisible="{Binding IsMinuteMode}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <utility:CircularPanel RadiusFactor="0.8" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate x:DataType="utility:ClockTickViewModel">
                                    <Button Content="{Binding Display}" Classes="ClockTick" Classes.Selected="{Binding IsSelected}"
                                            Command="{Binding $parent[UserControl].((components:TimePickerViewModel)DataContext).SelectTimeCommand}"
                                            CommandParameter="{Binding}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </Grid>

                <Grid Grid.Row="3" ColumnDefinitions="Auto,*,Auto,Auto" Margin="12,0,12,12">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="0"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <Button Grid.Column="0" CornerRadius="25" Width="40" Height="40">
                        <PathIcon Data="M20 5H4c-1.1 0-1.99 0.9-1.99 2L2 17c0 1.1 0.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-9 3h2v2h-2V8zm0 3h2v2H-2v-2zm-3-3h2v2H8V8zm0 3h2v2H8v-2zm-1 2H5v-2h2v2zm-1-3H5V8h2v2zm12 7H5v-2h14v2zm-4-3h2v2h-2v-2zm0-3h2v2h-2V8z"/>
                    </Button>
                    
                    <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" Spacing="16">
                        <Button Content="Cancel" Command="{Binding CancelCommand}" CornerRadius="35"/>
                        <Button Content="OK" Command="{Binding ConfirmCommand}" CornerRadius="35"/>
                    </StackPanel>
                </Grid>

            </Grid>
        </Grid>
    </Border>
</UserControl>
